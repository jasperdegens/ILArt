/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ILArt, ILArtInterface } from "../ILArt";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "artworkId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "parameterIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint16[]",
        name: "parametervalues",
        type: "uint16[]",
      },
    ],
    name: "ParameterChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "artworkId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "parameterIds",
        type: "uint256[]",
      },
      {
        internalType: "uint16[]",
        name: "parameterValues",
        type: "uint16[]",
      },
    ],
    name: "Interact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILArt__factory {
  static readonly abi = _abi;
  static createInterface(): ILArtInterface {
    return new utils.Interface(_abi) as ILArtInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ILArt {
    return new Contract(address, _abi, signerOrProvider) as ILArt;
  }
}
